on: 
 workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: 'x64'
      - uses: nttld/setup-ndk@v1.0.6
        with:
          ndk-version: r26
      - name: Prepare Ubuntu tools
        run: |
          sudo apt update
          sudo apt-get -y install git build-essential cmake automake make libtool autoconf
          ANDROID_NDK_HOME="${ANDROID_HOME}/ndk/26.3.11579264"
          ANDROID_NDK_ROOT="${ANDROID_HOME}/ndk/26.3.11579264"
          PATH=$ANDROID_HOME/cmake/3.22.1/bin:${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          TOOLCHAIN=$ANDROID_HOME/ndk/26.3.11579264/build/cmake/android.toolchain.cmake
          ANDROID_PLATFORM=android-29
          mkdir build && cd scripts
          mkdir -p deps
          mkdir -p deps/include
          mkdir -p deps/lib
          mkdir -p build && cd build

          UV_VERSION="1.48.0"
          wget https://dist.libuv.org/dist/v${UV_VERSION}/libuv-v${UV_VERSION}.tar.gz -O v${UV_VERSION}.tar.gz
          tar -xzf v${UV_VERSION}.tar.gz
          cd libuv-v${UV_VERSION}
          pwd
          cmake -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN -DANDROID_ABI="arm64-v8a" -DANDROID_PLATFORM=$ANDROID_PLATFORM -DBUILD_SHARED_LIBS=OFF
          make -j$(nproc || sysctl -n hw.ncpu || sysctl -n hw.logicalcpu)
          cp -fr include ../../deps
          cp libuv.a ../../deps/lib
          cd ../

          HWLOC_VERSION_MAJOR="2"
          HWLOC_VERSION_MINOR="10"
          HWLOC_VERSION_PATCH="0"

          HWLOC_VERSION="${HWLOC_VERSION_MAJOR}.${HWLOC_VERSION_MINOR}.${HWLOC_VERSION_PATCH}"
          wget https://download.open-mpi.org/release/hwloc/v${HWLOC_VERSION_MAJOR}.${HWLOC_VERSION_MINOR}/hwloc-${HWLOC_VERSION}.tar.gz -O hwloc-${HWLOC_VERSION}.tar.gz
          tar -xzf hwloc-${HWLOC_VERSION}.tar.gz
          cd hwloc-${HWLOC_VERSION}
          ./configure CC=aarch64-linux-android29-clang CXX=aarch64-linux-android29-clang++ LD=lld --disable-shared --enable-static --host=aarch64-linux-android29
          make -j$(nproc || sysctl -n hw.ncpu || sysctl -n hw.logicalcpu)
          cp -fr include ../../deps
          cp hwloc/.libs/libhwloc.a ../../deps/lib
          cd ../

          OPENSSL_VERSION="3.0.13"
          wget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz -O openssl-${OPENSSL_VERSION}.tar.gz
          tar -xzf openssl-${OPENSSL_VERSION}.tar.gz

          cd openssl-${OPENSSL_VERSION}
          ./config android-arm64 -no-shared -no-asm -no-zlib -no-comp -no-dgram -no-filenames -no-cms LD=lld
          make -j$(nproc || sysctl -n hw.ncpu || sysctl -n hw.logicalcpu)
          cp -fr include ../../deps
          cp libcrypto.a ../../deps/lib
          cp libssl.a ../../deps/lib
          cd ../

          cd ../
          cd ../build
          pwd
          ls ../scripts/deps/include
          cmake .. -DWITH_OPENCL=OFF \
          -DWITH_CUDA=OFF -DARM_V8=ON \
          -DXMRIG_DEPS=scripts/deps \
          -DHWLOC_LIBRARY="scripts/deps/lib/libhwloc.a" \
          -DHWLOC_INCLUDE_DIR="scripts/deps/include" \
          -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC=OFF \
          -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN \
          -DANDROID_ABI="arm64-v8a" \
          -DANDROID_PLATFORM=$ANDROID_PLATFORM
          make -j$(nproc)
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-without-markdown
          path: |
            build/xmrig
